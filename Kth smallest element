    // arr : given array
    // l : starting index of the array i.e 0
    // r : ending index of the array i.e size-1
    // k : find kth smallest element and return using this function

    int kthSmallest(int arr[], int l, int r, int k) {
        priority_queue<int> pq;    // Max heap
        for(int i=0;i<k;i++){
            pq.push(arr[i]);
        }
        // we are ensuring that the priority queue will always staore the 'k' small
        // elements & the top element will always be the kth smallest one..
        for(int i=k;i<r+1;i++){
            if(pq.top() > arr[i]){
                pq.pop();
                pq.push(arr[i]);
            } 
        }
        // returning the kth smallest one..
        return pq.top();
    }
