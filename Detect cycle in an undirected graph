// O(V+E) & O(V) SOLN...

bool detectcycle(int src, vector<int> adj[], vector<bool> &vis){
    vis[src] = true;
    queue<pair<int,int>> q;
    q.push({src,-1});
    while(!q.empty()){
        int node = q.front().first;
        int parent = q.front().second;
        q.pop();
        for(auto it : adj[node]){
           if(!vis[it]){
               vis[it] = true;
               q.push({it,node});
           }
           else if(it!=parent){
               return true;
           }
        }
    }
    return false;
}

    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
       vector<bool> vis(V, false);
       for(int i=0;i<V;i++){
           if(!vis[i]){
               if(detectcycle(i,adj,vis))
               return true;
           }
       }
       return false;
    }
