#include<bits/stdc++.h>
using namespace std;
#define ll long long

int dp[11][2][2];

int ftn(string str, int pos, int tight, int flag){       // function to calculate all numbers having a digin '3' in range [1, N]
    if(pos == str.size()){
    	if(flag){
    		return 1;     // if the number formed contains a digit '3'
    	}
    	return 0;
    }

    if(dp[pos][tight][flag] != -1) return dp[pos][tight][flag];

    if(tight == 1){
        int res = 0;
        for(int i = 0; i <= str[pos] - '0'; i++){
        	int flg = flag;
        	if(i == 3) flg = 1;
        	if(i == str[pos] - '0')
        		res += ftn(str, pos + 1, 1, flg);
        	else
        		res += ftn(str, pos + 1, 0, flg);
        }
        return dp[pos][tight][flag] = res;
    }
    else{
        int res = 0;
        for(int i = 0; i <= 9; i++){
        	int flg = flag;
        	if(i == 3) flg = 1;
        	res += ftn(str, pos + 1, 0, flg);
        }
        return dp[pos][tight][flag] = res;   
    }
}

int main(){
	int t;
	cin>>t;
	while(t--){
       int n;
       cin>>n;

       string str = to_string(n);
       memset(dp, -1, sizeof(dp));
       int val = ftn(str, 0, 1, 0);

       cout<<n - val<<endl;
	}
}
