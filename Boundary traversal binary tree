class Solution {
public:
void leftboundary(Node* root, vector<int> &ans){
    if(root==NULL)
    return;
    if(root->left){
      ans.push_back(root->data);
      leftboundary(root->left,ans);
    }
    else if(root->right){
        ans.push_back(root->data);
        leftboundary(root->right,ans);
    }
}
void printleaves(Node* root, vector<int> &ans){
    if(root==NULL)
    return;
    printleaves(root->left,ans);
    if(root->left==NULL&&root->right==NULL)
    ans.push_back(root->data);
    printleaves(root->right,ans);
}
void rightboundary(Node* root, vector<int> &ans){
    if(root==NULL)
    return;
    if(root->right){
      rightboundary(root->right,ans);
      ans.push_back(root->data);
    }
    else if(root->left){
        rightboundary(root->left,ans);
        ans.push_back(root->data);;
    } 
}
    vector <int> boundary(Node *root)
    {
        vector<int> ans;
        if(root==NULL)
        return ans;
        ans.push_back(root->data);
        leftboundary(root->left,ans);
        printleaves(root->left,ans);
        printleaves(root->right,ans);
        rightboundary(root->right,ans);
        return ans;
    }
};
