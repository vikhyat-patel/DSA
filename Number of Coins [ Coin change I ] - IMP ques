class Solution{

	public:
	int helper(int sum, int idx, int coins[], int n, vector<vector<int>> &dp)
	{
	    if(sum < 0 || idx == n)
	        return 1e8;
	        
	    if(sum == 0)
	        return 0;
	        
	    if(dp[idx][sum] != -1)
	        return dp[idx][sum];
	        
	    int pick = 1 + helper(sum - coins[idx], idx, coins, n, dp);
	    
	    int not_pick = helper(sum, idx + 1, coins, n, dp);
	    
	    return dp[idx][sum] = min(pick, not_pick);
	}
	
	int minCoins(int coins[], int M, int V) 
	{ 
	    vector<vector<int>>dp(M + 1, vector<int> (V + 1, -1));
	    
	    int ans = helper(V, 0, coins, M, dp);
	    
	    if(ans >= 1e8) return -1;
	    
	    return ans;
	}  
	  
};
