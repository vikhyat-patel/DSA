Optimal solution -> Typical Sliding window solution. Brute soln will be to generate all possible substrings and check for the smallest distinct window.

int findSubString(string str)
    {
        unordered_map<char, int> mp1;
        unordered_map<char, int> mp2;
        int len = 1e6;
        int i = 0;
        
        for(int i = 0; i < str.size(); i++){
            mp1[str[i]]++;
        }
        
        for(int j = 0; j < str.size(); j++){
            
            mp2[str[j]]++;
            
            if(mp2.size() == mp1.size()){
                
                while(mp2.size() == mp1.size()){
                    
                    len = min(len, j - i + 1);
                    
                    mp2[str[i]]--;
                    if(mp2[str[i]] == 0){
                        mp2.erase(str[i]);
                    } 
                    
                    i++;
                }
                
            }
            
        }
        
        return len;
    }
