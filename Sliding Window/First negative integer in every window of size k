// Optimal soln ...O(n) & O(k)...but start with the brute force first..
// It's a slight variation of the 'SLW maximum' problem..

vector<long long> printFirstNegativeInteger(long long int arr[],
                                             long long int n, long long int k) {
       vector<long long int> res;
       deque<long long int> dq;
       
       int i;
       for(i = 0; i < k; i++){
          if(arr[i] < 0){
              dq.push_back(i);
          } 
       }
       
       for(; i < n; i++){
           
           if(!dq.empty())
           res.push_back(arr[dq.front()]);
           else
           res.push_back(0);
           
           while(!dq.empty() && dq.front() <= i - k){
               dq.pop_front();
           }
           
           if(arr[i] < 0)
           dq.push_back(i);
       }
       if(!dq.empty())
       res.push_back(arr[dq.front()]);
       else
       res.push_back(0);
       
       return res;
}
